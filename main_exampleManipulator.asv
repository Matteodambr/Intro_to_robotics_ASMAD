clearvars ; close all ; clc ; beep off ;

% Robotics system toolbox (possibly)

% Variables
AbsTol = 1e-6 ; % Tolerance to compute inverse kinematics (position and attitude of EE)

% Load the robot
[RBT_kuka, robotData] = loadrobot('kukaIiwa7') ;

% Desired EE state (position + attitude)
EE_DCM_desired = eye() ;
EE_post_desired = [0.5; 0; 0] ;

% Generate the configuration structure - setConfiguration()
guess_configuration = setConfiguration(pi/4*ones(7,1), RBT_kuka) ;

% Show the robot in figure
% show(RBT_kuka, setConfiguration(initial_configuration, RBT_kuka) ) ;

% Compute inverse kinematics through simulink
model = 'simulink_manipulator_example' ;
set_param(model, 'StopTime', '1') ;
simOut = sim(model) ;


function config = setConfiguration(configuration_vec, RBT)

config = randomConfiguration(RBT) ;

for k = 1:length(configuration_vec)
    config(k).JointPosition = configuration_vec(k) ;
end

end